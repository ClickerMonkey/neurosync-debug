!function(e){function o(o){return o instanceof e.Model?"["+o.$db.className+":"+o.$db.toString(o)+"] ":o instanceof e.Database?"["+o.className+"] ":o instanceof e.Relation?"["+o.database.className+":"+o.type+":"+o.model.Database.className+"] ":o instanceof e.Operation?"["+o.type+"] ":!1}function l(e,l){var d=o(e);if(d!==!1)return d;for(var a=0;a<l.length;a++){var d=o(l[a]);if(d!==!1)return d}return"[Neuro] "}if(window.console){var d={0:"Created",1:"REST",2:"Remote data received, existing model updated",3:"Remote data received, new model created",4:"Model remotely removed, removed locally",5:"Models loaded remotely",6:"Offline, failed loading models remotely",7:"Error loading remote models",8:"Saved model removed locally because it does not exist remotely",9:"Models loaded locally",10:"Model deleted locally, resuming remote deletion",11:"Model loaded but not saved, resuming save",12:"Model loaded",73:"Auto-refresh",13:"Real-time save",14:"Real-time removal",15:"Model saved values",16:"Model save published",17:"Model save failure, conflicted",18:"Model update failure, does not exist remotely",19:"Model save error for",20:"Model save failure, offline!",21:"Model save resume",22:"Models loading remotely resumed",23:"Model saved locally",24:"Model failed to save locally, will still try to save it remotely",25:"Model saved remotely",26:"Model remove published",27:"Model removed locally",28:"Model remove failure, does not exist remotely",29:"Model remove error",30:"Model remove failure, offline!",31:"Model remove resume",32:"Model removed remotely",33:"Model removed locally",34:"Model failed to remove locally, will still try to remove it remotely",104:"Model local get skipped",105:"Model local get",106:"Model local get error",107:"Model remote get",108:"Model remote get error",35:"Application Online",36:"Application Offline",37:"LIVE",38:"Model local save ineffective, model is deleted",39:"Model local save blocked, waiting until previous operation finishes",40:"Model save ineffective, model is deleted",41:"Model remote save ineffective, model is deleted",42:"Model remove save blocked, waiting until previous operation finishes",43:"Model remote remove blocked, waiting until previous operation finishes",44:"Model local remove blocked, waiting until previous operation finishes",45:"Model local remove ineffective, no local model to remove",46:"Model local remove effective, unsaved model removed",47:"Model had a pending save that was canceled by remove",48:"Model update blocked with older revision",49:"Model ninja removed",50:"Model ninja saved",51:"Initial pulled from model",52:"Initial value loaded",53:"Initialized",54:"Relation cleared",55:"Relation set",56:"Pre-save",57:"Post-remove",58:"Clear key",59:"Set key",60:"Loaded",61:"Initialized",62:"Model ninja removed",63:"Model ninja saved",64:"Initial pulled from model",65:"Initial value loaded",66:"Relation cleared",67:"Relation set",69:"Post-remove",70:"Clear key",71:"Set key",72:"Loaded",74:"Initialized",75:"Model ninja removed",76:"Model ninja saved",77:"Initial value loaded",78:"Initial pulled from model",79:"Model removed",80:"Models sorted",81:"Model added",82:"Models lazily loaded",83:"Model grabbed based on initial",84:"Model ninja added",85:"Auto-saving",86:"Pre-remove",87:"Post-save",88:"Initialized",89:"Model ninja removed",90:"Model ninja saved",91:"Through ninja removed",92:"Initial value loaded",93:"Initial pulled from model",94:"Model removed",95:"Models sorted",96:"Model added",97:"Models lazily loaded",98:"Model grabbed based on initial",99:"Model ninja added",100:"Auto-saving",101:"Pre-remove",102:"Post-save",103:"Through added",68:"Through removed"};e.debugExclude=[],e.debugInclude=!1,e.debugNoData=[],e.debugWithData=!1,e.debugTrace=!1,e.debugStyle="color:blue; font-weight:bold",e.debug=function(o,a){if(e.debugInclude!==!1){if(e.indexOf(e.debugInclude,o)===!1)return}else if(e.indexOf(e.debugExclude,o)!==!1)return;if(o in d){var i=Array.prototype.slice.call(arguments,1);e.debugWithData!==!1?e.indexOf(e.debugWithData,o)===!1&&(i=[]):e.indexOf(e.debugNoData,o)!==!1&&(i=[]);var t=l(a,i),r=d[o];if(e.debugTrace&&i.push(new Error),i.length&&console.groupCollapsed){console.groupCollapsed("%c"+t+r,e.debugStyle);for(var n=0;n<i.length;n++)console.log(i[n]);console.groupEnd()}else console.log("%c"+t+r,e.debugStyle)}else if(arguments.length>1&&console.groupCollapsed){console.groupCollapsed("%c"+arguments[0],e.debugStyle);for(var n=1;n<arguments.length;n++)console.log(arguments[n]);console.groupEnd()}else console.log.apply(console,arguments)}}}(Neuro);
//# sourceMappingURL=neurosync-debug.min.js.map
